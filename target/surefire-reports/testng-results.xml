<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="9" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-27T14:54:19Z" name="Suite" finished-at="2023-07-27T14:56:27Z" duration-ms="127951">
    <groups>
    </groups>
    <test started-at="2023-07-27T14:54:19Z" name="Test" finished-at="2023-07-27T14:56:27Z" duration-ms="127951">
      <class name="tests.StartPageNegativeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.StartPageNegativeTest@c540f5a]" started-at="2023-07-27T14:54:19Z" name="setup" finished-at="2023-07-27T14:54:25Z" duration-ms="6245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testExchangeSellMaxAmount()[pri:0, instance:tests.StartPageNegativeTest@c540f5a]" started-at="2023-07-27T14:54:25Z" name="testExchangeSellMaxAmount" finished-at="2023-07-27T14:55:28Z" duration-ms="63094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExchangeSellMaxAmount -->
        <test-method signature="testMaxSpendAmountError()[pri:0, instance:tests.StartPageNegativeTest@c540f5a]" started-at="2023-07-27T14:55:29Z" name="testMaxSpendAmountError" finished-at="2023-07-27T14:56:03Z" duration-ms="34034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxSpendAmountError -->
        <test-method is-config="true" signature="wrapUp()[pri:0, instance:tests.StartPageNegativeTest@c540f5a]" started-at="2023-07-27T14:56:04Z" name="wrapUp" finished-at="2023-07-27T14:56:05Z" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapUp -->
      </class> <!-- tests.StartPageNegativeTest -->
      <class name="tests.BuyExchangeTest">
        <test-method is-config="true" signature="globalSetup()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:54:19Z" name="globalSetup" finished-at="2023-07-27T14:54:19Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:54:19Z" name="setup" finished-at="2023-07-27T14:54:28Z" duration-ms="9058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testExchangeAdvCashEURToBTC()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:54:28Z" name="testExchangeAdvCashEURToBTC" finished-at="2023-07-27T14:55:31Z" duration-ms="63095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExchangeAdvCashEURToBTC -->
        <test-method signature="testExchangeSellSepa()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:55:32Z" name="testExchangeSellSepa" finished-at="2023-07-27T14:56:05Z" duration-ms="33303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExchangeSellSepa -->
        <test-method signature="testFailExample()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:56:06Z" name="testFailExample" finished-at="2023-07-27T14:56:06Z" duration-ms="124" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at pages.BtcbitStartPage.enterSpendAmount(BtcbitStartPage.java:69)
at tests.BuyExchangeTest.testFailExample(BuyExchangeTest.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailExample -->
        <test-method signature="testSelectPaysafeCard()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:56:07Z" name="testSelectPaysafeCard" finished-at="2023-07-27T14:56:26Z" duration-ms="18643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectPaysafeCard -->
        <test-method is-config="true" signature="wrapUp()[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:56:26Z" name="wrapUp" finished-at="2023-07-27T14:56:27Z" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapUp -->
        <test-method is-config="true" signature="wrapAllUp(org.testng.ITestContext)[pri:0, instance:tests.BuyExchangeTest@7bb58ca3]" started-at="2023-07-27T14:56:27Z" name="wrapAllUp" finished-at="2023-07-27T14:56:27Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@576d5deb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapAllUp -->
      </class> <!-- tests.BuyExchangeTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
